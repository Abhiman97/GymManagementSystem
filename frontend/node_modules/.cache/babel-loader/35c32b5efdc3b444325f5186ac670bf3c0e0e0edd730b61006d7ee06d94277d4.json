{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Attach token to each request\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Handle 401 errors (unauthorized)\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.clear();\n    window.location.href = '/login'; // You can replace with router navigate if preferred\n  }\n  return Promise.reject(error);\n});\n\n// --- Auth API ---\nexport const authAPI = {\n  login: credentials => api.post('/api/auth/signin', credentials),\n  register: userData => api.post('/api/auth/signup', userData)\n};\n\n// --- User API ---\nexport const userAPI = {\n  getAll: () => api.get('/api/users'),\n  getById: id => api.get(`/api/users/${id}`),\n  update: (id, data) => api.put(`/api/users/${id}`, data),\n  delete: id => api.delete(`/api/users/${id}`)\n};\n\n// --- Membership API ---\nexport const membershipAPI = {\n  getAll: () => api.get('/api/memberships'),\n  getById: id => api.get(`/api/memberships/${id}`),\n  getByUserId: userId => api.get(`/api/memberships/user/${userId}`),\n  getActiveByUserId: userId => api.get(`/api/memberships/user/${userId}/active`),\n  getByStatus: status => api.get(`/api/memberships/status/${status}`),\n  getExpiring: (startDate, endDate) => api.get(`/api/memberships/expiring?startDate=${startDate}&endDate=${endDate}`),\n  getExpired: () => api.get('/api/memberships/expired'),\n  getActiveCount: () => api.get('/api/memberships/stats/active-count'),\n  checkUserHasActive: userId => api.get(`/api/memberships/check/${userId}`),\n  create: data => api.post('/api/memberships', data),\n  update: (id, data) => api.put(`/api/memberships/${id}`, data),\n  delete: id => api.delete(`/api/memberships/${id}`),\n  updateStatus: (id, status) => api.put(`/api/memberships/${id}/status?status=${status}`),\n  renew: (id, newEndDate) => api.put(`/api/memberships/${id}/renew?newEndDate=${newEndDate}`)\n};\n\n// --- Equipment API ---\nexport const equipmentAPI = {\n  getAll: () => api.get('/api/equipment'),\n  getById: id => api.get(`/api/equipment/${id}`),\n  create: data => api.post('/api/equipment', data),\n  update: (id, data) => api.put(`/api/equipment/${id}`, data),\n  delete: id => api.delete(`/api/equipment/${id}`),\n  updateStatus: (id, status) => api.put(`/api/equipment/${id}/status?status=${status}`)\n};\n\n// --- Gym Class API ---\nexport const gymClassAPI = {\n  getAll: () => api.get('/api/gym-classes'),\n  getById: id => api.get(`/api/gym-classes/${id}`),\n  create: data => api.post('/api/gym-classes', data),\n  update: (id, data) => api.put(`/api/gym-classes/${id}`, data),\n  delete: id => api.delete(`/api/gym-classes/${id}`),\n  updateStatus: (id, status) => api.put(`/api/gym-classes/${id}/status?status=${status}`)\n};\n\n// --- Training Session API ---\nexport const trainingSessionAPI = {\n  getAll: () => api.get('/api/training-sessions'),\n  getById: id => api.get(`/api/training-sessions/${id}`),\n  create: data => api.post('/api/training-sessions', data),\n  update: (id, data) => api.put(`/api/training-sessions/${id}`, data),\n  delete: id => api.delete(`/api/training-sessions/${id}`),\n  updateStatus: (id, status) => api.put(`/api/training-sessions/${id}/status?status=${status}`)\n};\n\n// --- Class Registration API ---\nexport const classRegistrationAPI = {\n  getAll: () => api.get('/api/class-registrations'),\n  getById: id => api.get(`/api/class-registrations/${id}`),\n  create: data => api.post('/api/class-registrations', data),\n  update: (id, data) => api.put(`/api/class-registrations/${id}`, data),\n  delete: id => api.delete(`/api/class-registrations/${id}`),\n  updateStatus: (id, status) => api.put(`/api/class-registrations/${id}/status?status=${status}`)\n};\n\n// --- Payment API ---\nexport const paymentAPI = {\n  getAll: () => api.get('/api/payments'),\n  getById: id => api.get(`/api/payments/${id}`),\n  create: data => api.post('/api/payments', data),\n  update: (id, data) => api.put(`/api/payments/${id}`, data),\n  delete: id => api.delete(`/api/payments/${id}`),\n  updateStatus: (id, status) => api.put(`/api/payments/${id}/status?status=${status}`)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","clear","window","location","href","authAPI","login","credentials","post","register","userData","userAPI","getAll","get","getById","id","update","data","put","delete","membershipAPI","getByUserId","userId","getActiveByUserId","getByStatus","getExpiring","startDate","endDate","getExpired","getActiveCount","checkUserHasActive","updateStatus","renew","newEndDate","equipmentAPI","gymClassAPI","trainingSessionAPI","classRegistrationAPI","paymentAPI"],"sources":["C:/Users/dac19/Desktop/GymManagementSystem/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Attach token to each request\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Handle 401 errors (unauthorized)\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = '/login'; // You can replace with router navigate if preferred\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// --- Auth API ---\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/api/auth/signin', credentials),\r\n  register: (userData) => api.post('/api/auth/signup', userData),\r\n};\r\n\r\n// --- User API ---\r\nexport const userAPI = {\r\n  getAll: () => api.get('/api/users'),\r\n  getById: (id) => api.get(`/api/users/${id}`),\r\n  update: (id, data) => api.put(`/api/users/${id}`, data),\r\n  delete: (id) => api.delete(`/api/users/${id}`),\r\n};\r\n\r\n// --- Membership API ---\r\nexport const membershipAPI = {\r\n  getAll: () => api.get('/api/memberships'),\r\n  getById: (id) => api.get(`/api/memberships/${id}`),\r\n  getByUserId: (userId) => api.get(`/api/memberships/user/${userId}`),\r\n  getActiveByUserId: (userId) => api.get(`/api/memberships/user/${userId}/active`),\r\n  getByStatus: (status) => api.get(`/api/memberships/status/${status}`),\r\n  getExpiring: (startDate, endDate) => \r\n    api.get(`/api/memberships/expiring?startDate=${startDate}&endDate=${endDate}`),\r\n  getExpired: () => api.get('/api/memberships/expired'),\r\n  getActiveCount: () => api.get('/api/memberships/stats/active-count'),\r\n  checkUserHasActive: (userId) => api.get(`/api/memberships/check/${userId}`),\r\n  create: (data) => api.post('/api/memberships', data),\r\n  update: (id, data) => api.put(`/api/memberships/${id}`, data),\r\n  delete: (id) => api.delete(`/api/memberships/${id}`),\r\n  updateStatus: (id, status) => api.put(`/api/memberships/${id}/status?status=${status}`),\r\n  renew: (id, newEndDate) => api.put(`/api/memberships/${id}/renew?newEndDate=${newEndDate}`),\r\n};\r\n\r\n// --- Equipment API ---\r\nexport const equipmentAPI = {\r\n  getAll: () => api.get('/api/equipment'),\r\n  getById: (id) => api.get(`/api/equipment/${id}`),\r\n  create: (data) => api.post('/api/equipment', data),\r\n  update: (id, data) => api.put(`/api/equipment/${id}`, data),\r\n  delete: (id) => api.delete(`/api/equipment/${id}`),\r\n  updateStatus: (id, status) => api.put(`/api/equipment/${id}/status?status=${status}`),\r\n};\r\n\r\n// --- Gym Class API ---\r\nexport const gymClassAPI = {\r\n  getAll: () => api.get('/api/gym-classes'),\r\n  getById: (id) => api.get(`/api/gym-classes/${id}`),\r\n  create: (data) => api.post('/api/gym-classes', data),\r\n  update: (id, data) => api.put(`/api/gym-classes/${id}`, data),\r\n  delete: (id) => api.delete(`/api/gym-classes/${id}`),\r\n  updateStatus: (id, status) => api.put(`/api/gym-classes/${id}/status?status=${status}`),\r\n};\r\n\r\n// --- Training Session API ---\r\nexport const trainingSessionAPI = {\r\n  getAll: () => api.get('/api/training-sessions'),\r\n  getById: (id) => api.get(`/api/training-sessions/${id}`),\r\n  create: (data) => api.post('/api/training-sessions', data),\r\n  update: (id, data) => api.put(`/api/training-sessions/${id}`, data),\r\n  delete: (id) => api.delete(`/api/training-sessions/${id}`),\r\n  updateStatus: (id, status) => api.put(`/api/training-sessions/${id}/status?status=${status}`),\r\n};\r\n\r\n// --- Class Registration API ---\r\nexport const classRegistrationAPI = {\r\n  getAll: () => api.get('/api/class-registrations'),\r\n  getById: (id) => api.get(`/api/class-registrations/${id}`),\r\n  create: (data) => api.post('/api/class-registrations', data),\r\n  update: (id, data) => api.put(`/api/class-registrations/${id}`, data),\r\n  delete: (id) => api.delete(`/api/class-registrations/${id}`),\r\n  updateStatus: (id, status) => api.put(`/api/class-registrations/${id}/status?status=${status}`),\r\n};\r\n\r\n// --- Payment API ---\r\nexport const paymentAPI = {\r\n  getAll: () => api.get('/api/payments'),\r\n  getById: (id) => api.get(`/api/payments/${id}`),\r\n  create: (data) => api.post('/api/payments', data),\r\n  update: (id, data) => api.put(`/api/payments/${id}`, data),\r\n  delete: (id) => api.delete(`/api/payments/${id}`),\r\n  updateStatus: (id, status) => api.put(`/api/payments/${id}/status?status=${status}`),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}