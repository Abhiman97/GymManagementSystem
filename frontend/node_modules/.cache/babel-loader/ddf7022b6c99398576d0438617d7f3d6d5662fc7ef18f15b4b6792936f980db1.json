{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dac19\\\\Desktop\\\\GymManagementSystem\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (token && storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n      if (parsedUser.roles && parsedUser.roles.length > 0) {\n        parsedUser.role = parsedUser.roles[0].replace('ROLE_', '');\n      }\n      setUser(parsedUser);\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await authAPI.login({\n        username,\n        password\n      });\n      const {\n        accessToken,\n        roles,\n        ...rest\n      } = response.data;\n\n      // Normalize role (e.g., 'ROLE_ADMIN' → 'ADMIN')\n      const normalizedRole = roles[0].replace('ROLE_', '');\n      const userData = {\n        ...rest,\n        roles,\n        role: normalizedRole // ← Store this for easy access\n      };\n      localStorage.setItem('token', accessToken);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authAPI.create(userData);\n      return {\n        success: true,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","storedUser","parsedUser","JSON","parse","roles","length","role","replace","login","username","password","response","accessToken","rest","data","normalizedRole","userData","setItem","stringify","success","error","_error$response","_error$response$data","message","register","create","_error$response2","_error$response2$data","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dac19/Desktop/GymManagementSystem/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\n\nconst AuthContext = createContext(null);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n  \n    if (token && storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n  \n      if (parsedUser.roles && parsedUser.roles.length > 0) {\n        parsedUser.role = parsedUser.roles[0].replace('ROLE_', '');\n      }\n  \n      setUser(parsedUser);\n      setIsAuthenticated(true);\n    }\n  \n    setLoading(false);\n  }, []);\n  \n\n\n\n  const login = async (username, password) => {\n    try {\n      const response = await authAPI.login({ username, password });\n  \n      const { accessToken, roles, ...rest } = response.data;\n  \n      // Normalize role (e.g., 'ROLE_ADMIN' → 'ADMIN')\n      const normalizedRole = roles[0].replace('ROLE_', '');\n  \n      const userData = {\n        ...rest,\n        roles,\n        role: normalizedRole, // ← Store this for easy access\n      };\n  \n      localStorage.setItem('token', accessToken);\n      localStorage.setItem('user', JSON.stringify(userData));\n  \n      setUser(userData);\n      setIsAuthenticated(true);\n  \n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Login failed',\n      };\n    }\n  };\n  \n\n  const register = async (userData) => {\n    try {\n      const response = await authAPI.create(userData);\n      return { success: true, message: response.data.message };\n    } catch (error) {\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Registration failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}